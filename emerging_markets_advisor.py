# -*- coding: utf-8 -*-
"""emerging-markets-advisor.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1cN2xJcZPc5Kw9AYC_wyFw0PTboogi3lD
"""

# !pip install langchain==0.0.157, pypdf, pinecone-client, openai, tiktoken, chromadb

import os
os.environ["OPENAI_API_KEY"] = OPENAI_API_KEY

import pinecone

# initialize pinecone
pinecone.init(
    api_key= PINECONE_API_KEY,  # find at app.pinecone.io
    environment="us-west1-gcp-free"  # next to api key in console
)

from langchain.document_loaders import PyPDFLoader

loader = PyPDFLoader("/content/emerging_markets_info.pdf")
pages = loader.load_and_split()

from langchain.text_splitter import RecursiveCharacterTextSplitter

text_splitter = RecursiveCharacterTextSplitter(
    chunk_size = 1000,
    chunk_overlap  = 200,
    length_function = len,
)

docs = text_splitter.split_documents(pages)

from langchain.embeddings.openai import OpenAIEmbeddings

embeddings = OpenAIEmbeddings()

from langchain.vectorstores import Pinecone

index_name = "skydeck-hack"

#create a new index
#docsearch = Pinecone.from_documents(docs, embeddings, index_name=index_name)

# if you already have an index, you can load it like this
#docsearch = Pinecone.from_existing_index(index_name, embeddings)

from langchain.vectorstores import Chroma
docsearch = Chroma.from_documents(docs, embeddings)

query = "Which country has the best invesment growth potential right now?"
docs = docsearch.similarity_search(query)
#docs = Pinecone.search(query, k=1, vector_field="sentence_embedding")
# print(len(docs))
# print(docs[0])
print(docs[0].page_content)

from langchain.chains import RetrievalQA
from langchain import OpenAI

#defining LLM
llm = OpenAI(temperature=0.2)

qa = RetrievalQA.from_chain_type(llm=llm, chain_type="stuff", retriever=docsearch.as_retriever(search_kwargs={"k": 2}))

query = "Which country has the best invesment growth potential right now?"
qa.run(query)